<?php

namespace App\Console\Commands;

use App\Models\Plan;
use App\Models\Module;
use Illuminate\Console\Command;

class SyncPlanModulesToTenants extends Command
{
    protected $signature = 'plan:sync-modules 
                            {plan_id? : ID do plano espec√≠fico}
                            {--module= : Sincronizar apenas um m√≥dulo espec√≠fico (slug)}
                            {--all : Sincronizar todos os planos}';

    protected $description = 'Sincronizar m√≥dulos dos planos com os tenants que t√™m subscription ativa';

    public function handle()
    {
        $planId = $this->argument('plan_id');
        $moduleSlug = $this->option('module');
        $syncAll = $this->option('all');

        // Sincronizar todos os planos
        if ($syncAll) {
            return $this->syncAllPlans($moduleSlug);
        }

        // Sincronizar plano espec√≠fico
        if ($planId) {
            return $this->syncPlan($planId, $moduleSlug);
        }

        $this->error('‚ùå Especifique um plano ou use --all para sincronizar todos');
        return 1;
    }

    /**
     * Sincronizar todos os planos
     */
    protected function syncAllPlans($moduleSlug = null)
    {
        $plans = Plan::where('is_active', true)->get();

        if ($plans->isEmpty()) {
            $this->warn('‚ö†Ô∏è  Nenhum plano ativo encontrado');
            return 0;
        }

        $this->info("üîÑ Sincronizando {$plans->count()} plano(s)...\n");

        $totalSynced = 0;

        foreach ($plans as $plan) {
            $this->line("üì¶ Plano: {$plan->name}");
            
            if ($moduleSlug) {
                $count = $this->syncPlanModule($plan, $moduleSlug);
            } else {
                $count = $plan->syncModulesToTenants();
            }

            if ($count > 0) {
                $this->info("   ‚úÖ {$count} tenant(s) sincronizado(s)");
                $totalSynced += $count;
            } else {
                $this->line("   ‚è≠Ô∏è  Nenhum tenant para sincronizar");
            }
        }

        $this->newLine();
        $this->info("‚úÖ Total: {$totalSynced} tenant(s) sincronizados em {$plans->count()} plano(s)");

        return 0;
    }

    /**
     * Sincronizar um plano espec√≠fico
     */
    protected function syncPlan($planId, $moduleSlug = null)
    {
        $plan = Plan::find($planId);

        if (!$plan) {
            $this->error("‚ùå Plano ID {$planId} n√£o encontrado");
            return 1;
        }

        $this->info("üîÑ Sincronizando plano: {$plan->name}\n");

        if ($moduleSlug) {
            $count = $this->syncPlanModule($plan, $moduleSlug);
        } else {
            $count = $plan->syncModulesToTenants();
        }

        if ($count > 0) {
            $this->info("‚úÖ {$count} tenant(s) sincronizados com sucesso!");
        } else {
            $this->warn("‚ö†Ô∏è  Nenhum tenant para sincronizar");
        }

        return 0;
    }

    /**
     * Sincronizar m√≥dulo espec√≠fico de um plano
     */
    protected function syncPlanModule(Plan $plan, $moduleSlug)
    {
        $module = Module::where('slug', $moduleSlug)->first();

        if (!$module) {
            $this->error("   ‚ùå M√≥dulo '{$moduleSlug}' n√£o encontrado");
            return 0;
        }

        $count = $plan->syncModuleToTenants($module->id);

        if ($count > 0) {
            $this->info("   ‚úÖ M√≥dulo '{$module->name}' sincronizado com {$count} tenant(s)");
        } else {
            $this->warn("   ‚ö†Ô∏è  M√≥dulo '{$module->name}' n√£o sincronizado (n√£o est√° no plano ou sem tenants)");
        }

        return $count;
    }
}
